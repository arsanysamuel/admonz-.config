#!/bin/sh

# Adjust the brightness of the laptop screen
# change screen path for other laptops
# todo: grep for point in the argument: if floating point produce error.

# Variables:
max_brightness=$(</sys/class/backlight/acpi_video0/max_brightness)  # cat command in this case considered useless, this is like catting the file into the variable
current_brightness=$(</sys/class/backlight/acpi_video0/brightness)
#echo $max_brightness  # echo the variable

#echo $(whoami)  # who is running this

if [ $(whoami) != "root" ]; then
	echo "Must be run as root!"
	echo -e "Usage:\n\t# brightness <level>\n"
	echo -e "Current Brightness Level = $current_brightness  (might differ from the real level)"
	echo -e "Max Brightness Level = $max_brightness"
else
	#echo $#  # how many arguments
	if [ $# -eq 1 -a $1 -le $max_brightness -a $1 -gt 0 ]; then  # number of args equal 1 and arg1 less than or equal max_brightness and arg1 more than 0
		echo $1 > /sys/class/backlight/acpi_video0/brightness
		echo -e "Brightness is set to $1."
		echo -e "Max Brightness Level = $max_brightness"
	else
		if [ $# -lt 1 ]; then
			echo -e "ERROR: Missing arguments: provide the desired brightness level.\n"
		elif [ $# -gt 1 ]; then
			echo -e "ERROR: Too many arguments.\n"
		elif [ $1 -gt $max_brightness ]; then
			echo -e "ERROR: Brightness level provided is greater than the maximum level.\n"
		elif [ $1 -le 0 ]; then
			echo -e "ERROR: Brightness level provided is less than the minimum level.\n"
		fi

		echo -e "Usage:\n\t# brightness <level>\n"
		echo -e "Current Brightness Level = $current_brightness  (might differ from the real level)"
		echo -e "Max Brightness Level = $max_brightness"
	fi
fi
